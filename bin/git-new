#!/bin/bash
# new [feature|release] branch
# initialy used to make new [developments|common/release] branch with date prefix

quit() {
  echo -e "$@"
  exit 1
}

f() {
  local dir="${1}"
  shift
  #local d="./" date_format="+%s" here="`basename $(pwd)`"

  # switch date format by project
  #case "$here" in
  #  billing-manager) date_format="+%Y-%m-%d";;
  #  rest-billing-dev|rest-billing-rc|notification) date_format="+%Y%m%d";;
  #esac

    #| sed 's/[\:{}#@\&é"è'"'"'çàù\/\?\$êûôî-\\\|() \[\]]/_/g' \
  local b="`echo "${@}" | tr [[:upper:]] [[:lower:]] \
    | sed 's/[\:{}#@\&é"è'"'"'çàù\/\?\$êûôî\\\|() ,\;<>\~\=\+\$\.]/_/g;' \
    | sed 's/\[/_/g;s/\]/_/g;s/-/_/g;s/\!/_/g;s/__*/_/g;s/_$//;s/^_//;'`"
  #local date="`date "$date_format"`"
  [ -z "$dir" -o -z "$b" ] && quit 'I need 2 args : "dir" and "branch name"'
  case $dir in 
    dev)
      # developements/ branch starting with date
      #d='developments/'${date}_${b// /_}
      # feature/ branch starting with FOB
      d='feature/'${b}
    ;;
    rel)
      # common/release/ branch
      #d='common/release/'${b// /_}
      # release/ branch
      d='release/'${b}
    ;;
    *)   quit "'$dir' : bad value for directory (only 'dev' & 'rel' are allowed)" ;;

  esac 
  git checkout -b $d
}

f $@
